# Core Metrics Plus - AI Development Configuration
# 
# SUDOLANG VERSION: 1.0.0
# PURPOSE: AI-assisted development configuration
# DOCS: https://github.com/paralleldrive/sudolang-llm-support/blob/main/sudolang.sudo.md
#
# This file follows the Sudolang specification for LLM support.
# Sudolang helps Large Language Models (LLMs) understand:
# 1. Project structure and conventions
# 2. Development workflows and standards
# 3. Testing and quality requirements
# 4. Documentation requirements
#
# AI CAPABILITIES REQUIRED:
# - Code generation
# - Documentation writing
# - Testing suggestions
# - Performance optimization
# - WordPress best practices

metadata:
  version: "1.0.0"
  plugin_name: "Core Metrics Plus"
  description: "WordPress performance optimization plugin"
  repository: "https://github.com/carmelyne/core-metrics-plus"
  ai_compatibility:
    - "Codeium"
    - "GitHub Copilot"
    - "ChatGPT"
  primary_goals:
    - "Optimize WordPress Core Web Vitals"
    - "Improve page load performance"
    - "Maintain theme compatibility"
  context_requirements:
    - "WordPress plugin development experience"
    - "Performance optimization knowledge"
    - "PHP 8.0+ compatibility"

# Development Workflow Configuration
version_control:
  branch_naming:
    feature: "feat/*"
    bugfix: "fix/*"
    documentation: "docs/*"
    testing: "test/*"
    ci: "ci/*"

  commit_messages:
    # Using Conventional Commits - https://www.conventionalcommits.org/
    feat: "New features"
    fix: "Bug fixes"
    docs: "Documentation changes"
    style: "Code style changes"
    refactor: "Code refactoring"
    test: "Test changes"
    ci: "CI/CD changes"
    chore: "Other changes"

  pr_workflow:
    create_branch:
      command: "git checkout -b ${branch_type}/${branch_name}"
      example: "git checkout -b feat/new-feature"

    make_changes:
      commit_format: "${type}: ${description}\n\n${details}"
      example: |
        feat: add new optimization feature
        
        - Add feature X
        - Update docs
        - Add tests

    create_pr:
      command: "gh pr create --title '${commit_type}: ${description}' --body '${pr_body}'"
      template: |
        ## Changes
        ${bullet_points}

        ## Testing
        - [ ] Tests added/updated
        - [ ] Documentation updated
        - [ ] No breaking changes

    review_process:
      checks:
        - "GitHub Actions workflow passes"
        - "Code review approved"
        - "Documentation updated"

# Plugin Version Management
versioning:
  format: "MAJOR.MINOR.PATCH"
  rules:
    MAJOR: "Breaking changes"
    MINOR: "New features (feat:)"
    PATCH: "Bug fixes (fix:)"

# Testing Requirements
testing:
  environments:
    - "PHP 8.0"
    - "PHP 8.1"
    - "WordPress latest"
    - "WordPress 6.2"
  
  types:
    - "Syntax validation"
    - "Basic smoke tests"
    - "File integrity checks"

# Documentation Structure
documentation:
  required_files:
    - "README.md"
    - "docs/PERFORMANCE.md"
    - "docs/USER_STORIES.md"
  
  code_comments:
    style: "PHPDoc"
    required_sections:
      - "@package"
      - "@since"
      - "@param (if applicable)"
      - "@return (if applicable)"

# Required Files Check
function_check_required_files:
  required_files:
    - "docs/AI_ASSIST.md"
    - "core-metrics-plus.php"
    - "docs/CHANGELOG.md"

# AI Development Notes
ai_notes:
  performance_optimization:
    critical_css:
      approach: "Exclude admin styles only"
      reason: "More reliable than complex critical path analysis"
    
    script_loading:
      approach: "Conservative async loading"
      reason: "Preserve core WordPress functionality"

  code_generation:
    style: "WordPress coding standards"
    patterns: "Use singleton for optimization classes"
    
  testing_focus:
    - "Cross-theme compatibility"
    - "Core Web Vitals impact"
    - "WordPress version compatibility"
